/**
Registry for the alchemial imbuer
 */
GTCEuStartupEvents.registry("gtceu:recipe_type", phoenixvine => {
    phoenixvine.create("source_imbument")
        .category("alchemical")
        .setEUIO("in")
        .setMaxIOSize(3, 1, 1, 1)
        .setSlotOverlay(false, false, GuiTextures.SOLIDIFIER_OVERLAY)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.CHEMICAL);
    phoenixvine.create("source_extraction")
        .category("alchemical")
        .setEUIO("in")
        .setMaxIOSize(3, 1, 1, 1)
        .setSlotOverlay(false, false, GuiTextures.SOLIDIFIER_OVERLAY)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.CHEMICAL);
});
GTCEuStartupEvents.registry("gtceu:machine", phoenixvine => {
    phoenixvine.create("alchemical_imbuer", "multiblock")
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeTypes(["source_imbument","source_extraction"])
        .recipeModifiers([GTRecipeModifiers.OC_NON_PERFECT_SUBTICK, GTRecipeModifiers.BATCH_MODE])
        .appearanceBlock(GTBlocks.CASING_TITANIUM_STABLE)
        .pattern(definition => FactoryBlockPattern.start()
            .aisle("BBCCCBB", "BBBBBBB", "BBBBBBB", "BBBBBBB", "BBBBBBB", "BBBBBBB", "BBCCCBB")
            .aisle("BCDDDCB", "BBCCCBB", "BBBBBBB", "BBBBBBB", "BBBBBBB", "BBCCCBB", "BCDDDCB")
            .aisle("CDDDDDC", "BCEEECB", "BBFFFBB", "BBFFFBB", "BBFFFBB", "BCDDDCB", "CDGGGDC")
            .aisle("CDDDDDC", "BCEEECB", "BBFEFBB", "BBFHFBB", "BBFEFBB", "BCDIDCB", "CDGJGDC")
            .aisle("CDDDDDC", "BCEEECB", "BBFFFBB", "BBFFFBB", "BBFFFBB", "BCDDDCB", "CDGGGDC")
            .aisle("BCDDDCB", "BBCCCBB", "BBBBBBB", "BBBBBBB", "BBBBBBB", "BBCCCBB", "BCDDDCB")
            .aisle("BBCKCBB", "BBBBBBB", "BBBBBBB", "BBBBBBB", "BBBBBBB", "BBBBBBB", "BBCCCBB")
            .where("B", Predicates.any())
            .where("C", Predicates.blocks("gtceu:clean_machine_casing")
                .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                .or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
            .where("D", Predicates.blocks("ars_nouveau:sourcestone"))
            .where("E", Predicates.blocks("ars_nouveau:magebloom_block"))
            .where("F", Predicates.blocks("gtceu:tempered_glass"))
            .where("G", Predicates.blocks("ars_nouveau:void_prism"))
            .where("H", Predicates.blocks("ars_nouveau:source_gem_block"))
            .where("I", Predicates.blocks("ars_nouveau:arcane_core"))
            .where("J", Predicates.blocks("ars_nouveau:agronomic_sourcelink"))
            .where("K", Predicates.controller(Predicates.blocks(definition.get())))
            .build()
        )
        .workableCasingModel("gtceu:block/casings/solid/machine_casing_clean_stainless_steel", "gtceu:block/multiblock/implosion_compressor")

}); // .or(Predicates.blocks(INPUT_ENERGY_HATCH[EV]))
